{
  "version": 3,
  "sources": ["../app/entry.server.jsx", "../app/root.jsx", "../app/routes/_index.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import ReactDOMServer from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  const markup = ReactDOMServer.renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLocation,\n  useLoaderData,\n  useNavigation } from\n\"@remix-run/react\";\n\nimport { json } from \"@remix-run/node\";\n\nimport styles from \"./styles/global.css\";\n\n// export const meta = () => ({\n//   charset: \"utf-8\",\n//   title: \"My First Remix App\",\n//   viewport: \"width=device-width,initial-scale=1\",\n// });\nexport async function loader({ request }) {\n  return json({ ENV: { LOCAL_PATH: process.env.VITE_SOCKET_SERVER_URL } });\n}\nexport const links = () => [{ rel: \"stylesheet\", href: styles }];\n\nexport default function App() {\n  const { locale, ENV } = useLoaderData();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.process = ${JSON.stringify({\n              env: ENV.LOCAL_PATH\n            })}`\n          }} />\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nconst socketURL = process.env;\nexport default function Index() {\n  const [userName, setUserName] = useState(\"\");\n  const [assistantName, setAssistantName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const socket = io(socketURL);\n\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to the server\");\n    });\n\n    socket.on(\"$name\", (name) => {\n      setUserName(name);\n    });\n\n    socket.on(\"$assistantName\", (name) => {\n      setAssistantName(name);\n    });\n\n    socket.on(\"message\", (data) => {\n      setMessages((prevMessages) => [...prevMessages, data]);\n    });\n\n    socket.on(\"error\", (data) => {\n      console.error(\"Socket.IO error: \", data);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    const socket = io(socketURL);\n    socket.emit(\"message\", `${userName}: ${message}`);\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n      <h1>\u804A\u5929\u5BA4</h1>\n      <div id=\"username\">\n        Username: <span>{userName}</span>\n      </div>\n      <div id=\"assistantName\">\n        Assistant Name: <span>{assistantName}</span>\n      </div>\n      <div id=\"chatbox\">\n        {messages.map((msg, index) => {\n          const isUserMessage = msg.startsWith(`${userName}:`);\n          return (\n            <div\n              key={index}\n              className={`message ${isUserMessage ? \"user\" : \"assistant\"}`}\n            >\n              <div className=\"message-content\">{msg}</div>\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"inputContainer\">\n        <input\n          type=\"text\"\n          id=\"messageInput\"\n          placeholder=\"Type a message...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button id=\"sendButton\" onClick={sendMessage}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-7RQHCKFD.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-SFDIGTAH.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-GMFRLIKR.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-PFXQAUAD.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-T4E4GN5B.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'077eebda','hmr':{'runtime':'/build/_shared/chunk-GMFRLIKR.js','timestamp':1717842240294},'url':'/build/manifest-077EEBDA.js'};", "\nimport * as entryServer from \"/Users/allen/chat-app/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/_index.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"unstable_singleFetch\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV"]
}
